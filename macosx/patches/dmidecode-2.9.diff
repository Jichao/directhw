Index: dmidecode-2.9/config.h
===================================================================
--- dmidecode-2.9/config.h	(revision 122)
+++ dmidecode-2.9/config.h	(working copy)
@@ -9,8 +9,12 @@
 #ifdef __BEOS__
 #define DEFAULT_MEM_DEV "/dev/misc/mem"
 #else
+#ifdef __APPLE__
+#define DEFAULT_MEM_DEV "DirectHW"
+#else
 #define DEFAULT_MEM_DEV "/dev/mem"
 #endif
+#endif
 
 /* Use mmap or not */
 #ifndef __BEOS__
Index: dmidecode-2.9/util.c
===================================================================
--- dmidecode-2.9/util.c	(revision 122)
+++ dmidecode-2.9/util.c	(working copy)
@@ -47,6 +47,10 @@
 #include "types.h"
 #include "util.h"
 
+#ifdef __APPLE__
+#include <DirectHW/DirectHW.h>
+#endif
+
 #ifndef USE_MMAP
 static int myread(int fd, u8 *buf, size_t count, const char *prefix)
 {
@@ -97,6 +101,7 @@
 void *mem_chunk(size_t base, size_t len, const char *devmem)
 {
 	void *p;
+#ifndef __APPLE__
 	int fd;
 #ifdef USE_MMAP
 	size_t mmoffset;
@@ -160,6 +165,22 @@
 	
 	if(close(fd)==-1)
 		perror(devmem);
-	
+#else
+	void *v;
+	iopl(3);
+	if((v=map_physical(base, len))==NULL)
+	{
+		perror("map_physical");
+		return NULL;
+	}
+
+	if((p=malloc(len))==NULL)
+	{
+		perror("malloc");
+		return NULL;
+	}
+	memcpy(p, v, len);
+	unmap_physical(v, len);
+#endif
 	return p;
 }
Index: dmidecode-2.9/Makefile
===================================================================
--- dmidecode-2.9/Makefile	(revision 122)
+++ dmidecode-2.9/Makefile	(working copy)
@@ -21,6 +21,11 @@
 # Pass linker flags here
 LDFLAGS =
 
+OS_ARCH = $(shell uname)
+ifeq ($(OS_ARCH), Darwin)
+LDFLAGS += -framework IOKit -framework DirectHW
+endif
+
 DESTDIR =
 prefix  = /usr/local
 sbindir = $(prefix)/sbin
Index: dmidecode-2.9/biosdecode.c
===================================================================
--- dmidecode-2.9/biosdecode.c	(revision 122)
+++ dmidecode-2.9/biosdecode.c	(working copy)
@@ -557,9 +557,15 @@
 static int parse_command_line(int argc, char * const argv[])
 {
 	int option;
+#ifndef __APPLE__
 	const char *optstring = "d:hV";
+#else
+	const char *optstring = "hV";
+#endif
 	struct option longopts[]={
+#ifndef __APPLE__
 		{ "dev-mem", required_argument, NULL, 'd' },
+#endif
 		{ "help", no_argument, NULL, 'h' },
 		{ "version", no_argument, NULL, 'V' },
 		{ 0, 0, 0, 0 }
@@ -568,9 +574,11 @@
 	while((option=getopt_long(argc, argv, optstring, longopts, NULL))!=-1)
 		switch(option)
 		{
+#ifndef __APPLE__
 			case 'd':
 				opt.devmem=optarg;
 				break;
+#endif
 			case 'h':
 				opt.flags|=FLAG_HELP;
 				break;
@@ -589,7 +597,9 @@
 	static const char *help=
 		"Usage: biosdecode [OPTIONS]\n"
 		"Options are:\n"
+#ifndef __APPLE__
 		" -d, --dev-mem FILE     Read memory from device FILE (default: " DEFAULT_MEM_DEV ")\n"
+#endif
 		" -h, --help             Display this help text and exit\n"
 		" -V, --version          Display the version and exit\n";
 	
Index: dmidecode-2.9/vpdopt.c
===================================================================
--- dmidecode-2.9/vpdopt.c	(revision 122)
+++ dmidecode-2.9/vpdopt.c	(working copy)
@@ -92,9 +92,15 @@
 int parse_command_line(int argc, char * const argv[])
 {
 	int option;
+#ifndef __APPLE__
 	const char *optstring = "d:hs:uV";
+#else
+	const char *optstring = "hs:uV";
+#endif
 	struct option longopts[]={
+#ifndef __APPLE__
 		{ "dev-mem", required_argument, NULL, 'd' },
+#endif
 		{ "help", no_argument, NULL, 'h' },
 		{ "string", required_argument, NULL, 's' },
 		{ "dump", no_argument, NULL, 'u' },
@@ -105,9 +111,11 @@
 	while((option=getopt_long(argc, argv, optstring, longopts, NULL))!=-1)
 		switch(option)
 		{
+#ifndef __APPLE__
 			case 'd':
 				opt.devmem=optarg;
 				break;
+#endif
 			case 'h':
 				opt.flags|=FLAG_HELP;
 				break;
@@ -147,7 +155,9 @@
 	static const char *help=
 		"Usage: vpddecode [OPTIONS]\n"
 		"Options are:\n"
+#ifndef __APPLE__
 		" -d, --dev-mem FILE     Read memory from device FILE (default: " DEFAULT_MEM_DEV ")\n"
+#endif
 		" -h, --help             Display this help text and exit\n"
 		" -s, --string KEYWORD   Only display the value of the given VPD string\n"
 		" -u, --dump             Do not decode the VPD records\n"
Index: dmidecode-2.9/ownership.c
===================================================================
--- dmidecode-2.9/ownership.c	(revision 122)
+++ dmidecode-2.9/ownership.c	(working copy)
@@ -112,9 +112,15 @@
 static int parse_command_line(int argc, char * const argv[])
 {
 	int option;
+#ifndef __APPLE__
 	const char *optstring = "d:hV";
+#else
+	const char *optstring = "hV";
+#endif
 	struct option longopts[]={
+#ifndef __APPLE__
 		{ "dev-mem", required_argument, NULL, 'd' },
+#endif
 		{ "help", no_argument, NULL, 'h' },
 		{ "version", no_argument, NULL, 'V' },
 		{ 0, 0, 0, 0 }
@@ -123,9 +129,11 @@
 	while((option=getopt_long(argc, argv, optstring, longopts, NULL))!=-1)
 		switch(option)
 		{
+#ifndef __APPLE__
 			case 'd':
 				opt.devmem=optarg;
 				break;
+#endif
 			case 'h':
 				opt.flags|=FLAG_HELP;
 				break;
@@ -144,7 +152,9 @@
 	static const char *help=
 		"Usage: ownership [OPTIONS]\n"
 		"Options are:\n"
+#ifndef __APPLE__
 		" -d, --dev-mem FILE     Read memory from device FILE (default: " DEFAULT_MEM_DEV ")\n"
+#endif
 		" -h, --help             Display this help text and exit\n"
 		" -V, --version          Display the version and exit\n";
 	
